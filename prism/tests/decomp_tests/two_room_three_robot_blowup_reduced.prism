
//a strange new world :P 

//r1 init 1 r2 init 6 r3 init 7 

mdp


       //const double fail = 0.2;
       const int failstate = -1;//11;
       const double p = 0.8;
       const double ps = 1.0;


module world

       //s:[0..failstate] init 1; 
       s:[failstate..10] init 1; 
       //the last state is a fail state 
       [v0_v5] (s=0) -> p:(s'=5) +(1-p):(s'=failstate);
       [v0_v6] (s=0) -> p:(s'=6) +(1-p):(s'=failstate);

       [v1_v2] (s=1) -> p:(s'=2) +(1-p):(s'=failstate);
       [v1_v3] (s=1) -> p:(s'=3) +(1-p):(s'=failstate);
       [v1_v4] (s=1) -> p:(s'=4) +(1-p):(s'=failstate);

       [v2_v1] (s=2) -> p:(s'=1) +(1-p):(s'=failstate);
       [v2_v5] (s=2) -> p:(s'=5) +(1-p):(s'=failstate);

       [v3_v1] (s=3) -> p:(s'=1) +(1-p):(s'=failstate);
       [v3_v7] (s=3) -> p:(s'=7) +(1-p):(s'=failstate);

       [v4_v1] (s=4) -> p:(s'=1) +(1-p):(s'=failstate);
       [v4_v6] (s=4) -> p:(s'=6) +(1-p):(s'=failstate);

       [v5_v0] (s=5) -> p:(s'=0) +(1-p):(s'=failstate);
       [v5_v2] (s=5) -> p:(s'=2) +(1-p):(s'=failstate);

       [v6_v0] (s=6) -> p:(s'=0) +(1-p):(s'=failstate);
       [v6_v4] (s=6) -> p:(s'=4) +(1-p):(s'=failstate);
       [v6_v9] (s=6) -> p:(s'=9) +(1-p):(s'=failstate);

       [v7_v8] (s=7) -> p:(s'=8) +(1-p):(s'=failstate);
       [v7_v3] (s=7) -> p:(s'=3) +(1-p):(s'=failstate);
       
       [v8_v7] (s=8) -> p:(s'=7) +(1-p):(s'=failstate);

       [v9_v6] (s=9) -> p:(s'=6) +(1-p):(s'=failstate);
       [v9_v10] (s=9) -> p:(s'=10) +(1-p):(s'=failstate);

       [v10_v9] (s=10) -> p:(s'=9) +(1-p):(s'=failstate);

       [failed] (s=failstate) -> (s'=failstate);

endmodule 

label "v0" = s=0; 
label "v1" = s=1; 
label "v2" = s=2; 
label "v3" = s=3; 
label "v4" = s=4;
label "v5" = s=5; 
label "v6" = s=6; 
label "v7" = s=7;
label "v8" = s=8;
label "v9" = s=9; 
label "v10" = s=10; 

rewards "time"
//for future use to replace with regexp m-x replace-regexp <ret> ->.+ <ret> :1.0;

	[v0_v5] (s=0) :1.0;
       [v0_v6] (s=0) :1.0;

       [v1_v2] (s=1) :1.0;
       [v1_v3] (s=1) :1.0;
       [v1_v4] (s=1) :1.0;

       [v2_v1] (s=2) :1.0;
       [v2_v5] (s=2) :1.0;

       [v3_v1] (s=3) :1.0;
       [v3_v7] (s=3) :1.0;

       [v4_v1] (s=4) :1.0;
       [v4_v6] (s=4) :1.0;

       [v5_v0] (s=5) :1.0;
       [v5_v2] (s=5) :1.0;

       [v6_v0] (s=6) :1.0;
       [v6_v4] (s=6) :1.0;
       [v6_v9] (s=6) :1.0;

       [v7_v8] (s=7) :1.0;
       [v7_v3] (s=7):1.0;
       
       [v8_v7] (s=8) :1.0;

       [v9_v6] (s=9) :1.0;
       [v9_v10] (s=9) :1.0;

       [v10_v9] (s=10) :1.0;

	
       [failed] (s=failstate) : 1.0;

endrewards


