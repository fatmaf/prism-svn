//a strange new world :P 
//not really a lazy man's strange world 
// ---------  7 --------
//|			|
//|			|
//6 <->	      5	<->	4
//| 	      |		|
//| 	      |		8
//| 	      |		|
//1 <->	      2	<->	3
//| 	      |		|
//|	      |		|
// ---------- 0 --------

//r1 init 6 r2 init 2 r3 init 4 

mdp


       //const double fail = 0.2;
       const int failstate = 9;
       const double p = 0.8;


module world

       s:[0..failstate] init 6; 
       //the last state is a fail state 
       [v0_v1] (s=0) -> p:(s'=1)+(1-p):(s'=failstate);
       [v0_v3] (s=0) -> p:(s'=3)+(1-p):(s'=failstate);

       [v1_v0] (s=1) -> p:(s'=0)+(1-p):(s'=failstate);
       [v1_v2] (s=1) -> p:(s'=2)+(1-p):(s'=failstate);
       [v1_v6] (s=1) -> p:(s'=6)+(1-p):(s'=failstate);

       [v3_v0] (s=3) -> p:(s'=0)+(1-p):(s'=failstate);
       [v3_v2] (s=3) -> p:(s'=2)+(1-p):(s'=failstate);
       [v3_v4] (s=3) -> p:(s'=4)+(1-p):(s'=failstate);

       [v2_v0] (s=2) -> p:(s'=0)+(1-p):(s'=failstate);
       [v2_v1] (s=2) -> p:(s'=1)+(1-p):(s'=failstate);
       [v2_v3] (s=2) -> p:(s'=3)+(1-p):(s'=failstate);
       [v2_v5] (s=2) -> p:(s'=5)+(1-p):(s'=failstate);
       
       [v4_v2] (s=4) -> p:(s'=2)+(1-p):(s'=failstate);
       [v4_v3] (s=4) -> p:(s'=3)+(1-p):(s'=failstate);
       [v4_v5] (s=4) -> p:(s'=5)+(1-p):(s'=failstate);
       [v4_v7] (s=4) -> p:(s'=7)+(1-p):(s'=failstate);

       [v5_v2] (s=5) -> p:(s'=2)+(1-p):(s'=failstate);
       [v5_v4] (s=5) -> p:(s'=4)+(1-p):(s'=failstate);
       [v5_v6] (s=5) -> p:(s'=6)+(1-p):(s'=failstate);
       
       [v6_v1] (s=6) -> p:(s'=1)+(1-p):(s'=failstate);
       [v6_v5] (s=6) -> p:(s'=5)+(1-p):(s'=failstate);
       [v6_v7] (s=6) -> p:(s'=7)+(1-p):(s'=failstate);

       [v7_v6] (s=7) -> p:(s'=6)+(1-p):(s'=failstate);
       [v7_v4] (s=7) -> p:(s'=4)+(1-p):(s'=failstate);

       [v8_v4] (s=8) -> p:(s'=4)+(1-p):(s'=failstate); 
       [v8_v3] (s=8) -> p:(s'=3)+(1-p):(s'=failstate); 
       [v4_v8] (s=4) -> p:(s'=8)+(1-p):(s'=failstate); 
       [v3_v8] (s=3) -> p:(s'=8)+(1-p):(s'=failstate); 
       

       [failed] (s=failstate) -> (s'=failstate);

endmodule 

label "v0" = s=0; 
label "v1" = s=1; 
label "v2" = s=2; 
label "v3" = s=3; 
label "v4" = s=4;
label "v5" = s=5; 
label "v6" = s=6; 
label "v7" = s=7;
label "v8" = s=8;

rewards "time"

       [v0_v1] (s=0) :1.0;
       [v0_v3] (s=0) :1.0;

       [v1_v0] (s=1) :1.0;
       [v1_v2] (s=1) :1.0;
       [v1_v6] (s=1) :1.0;

       [v3_v0] (s=3) :1.0;
       [v3_v2] (s=3) :1.0;
       [v3_v4] (s=3) :1.0;

       [v2_v1] (s=2) :1.0;
       [v2_v3] (s=2) :1.0;
       [v2_v5] (s=2) :1.0;
       
       [v4_v3] (s=4) :1.0;
       [v4_v5] (s=4) :1.0;
       [v4_v7] (s=4) :1.0;

       [v5_v2] (s=5) :1.0;
       [v5_v4] (s=5) :1.0;
       [v5_v6] (s=5) :1.0;
       
       [v6_v1] (s=6) :1.0;
       [v6_v5] (s=6) :1.0;
       [v6_v7] (s=6) :1.0;

       [v7_v6] (s=7) :1.0;
       [v7_v4] (s=7) :1.0;

       [v8_v4] (s=8) :1.0; 
       [v8_v3] (s=8) :1.0; 
       [v4_v8] (s=4) :1.0; 
       [v3_v8] (s=3) :1.0; 
	
       [failed] (s=failstate) : 1.0;

endrewards


