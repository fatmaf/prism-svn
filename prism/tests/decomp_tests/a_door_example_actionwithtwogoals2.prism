

mdp

       const int failstate = -1;
       const double p = 0.7;
       const double ps = 1.0;
       const int unknown = -1;
       const int open = 1;
       const int closed = 0; 


module world

       s:[failstate..9] init 2;
       door:[unknown .. open] init unknown; 
       
       //the last state is a fail state
       [v0_3] (s=0) -> (s'=3);
       [v3_0] (s=3) -> (s'=0);
       [v3_7] (s=3) -> p:(s'=7) + (1-p):(s'=failstate);
       [v3_4] (s=3) -> p:(s'=4) + (1-p):(s'=failstate);
       [v7_3] (s=7) -> (s'=3);

       [v1_4] (s=1) -> (s'=4);
       [v4_3] (s=4) -> (s'=3);
       [v4_1] (s=4) -> (s'=1); 
       [check_door_v4] (door=unknown) & (s=4) -> p:(door'=open) + (1-p):(door'=closed);
       [v4_8] (door=open) & (s=4) -> (s'=8);
       [v8_4] (door=open) & (s=8) -> (s'=4);
       [v4_5] (s=4) -> p:(s'=5) + (1-p):(s'=failstate);

       //THIS IS DIFFERENT FOR THIS ROBOT ONLY 
       [v5_4] (s=5) -> p:(s'=4) + (1-p):(s'=failstate);

       [v2_5] (s=2) -> (s'=5);
       [v5_2] (s=5) -> (s'=2);
       [v5_6] (s=5) -> (s'=6);
       [v6_5] (s=6) -> (s'=5);

       
       //[v5_9] (s=5) -> p:(s'=9) + (1-p):(s'=failstate);
       //[v9_5] (s=9) -> (s'=5);
       [v5_9_10] (s=5) ->p:(s'=10)+((1-p)/2):(s'=9)+((1-p)/2):(s'=failstate);
       
       [failed] (s=failstate) -> (s'=failstate);

endmodule 

label "v0" = s=0; 
label "v1" = s=1; 
label "v2" = s=2; 
label "v3" = s=3; 
label "v4" = s=4;
label "v5" = s=5; 
label "v6" = s=6;
label "v7" = s=7;
label "v8" = s=8;
label "v9" = s=9;
label "v10" = s=10;


rewards "time"
//for future use to replace with regexp m-x replace-regexp <ret> ->.+ <ret>  :1.0;

       [v0_3] (s=0)  :1.0;
       [v3_0] (s=3)  :1.0;
       [v3_7] (s=3)  :1.0;
       [v3_4] (s=3)  :1.0;
       [v7_3] (s=7)  :1.0;

       [v1_4] (s=1)  :1.0;
       [v4_1] (s=4)  :1.0;
       [check_door_v4] (door=unknown) & (s=4)  :1.0;
       [v4_8] (door=open) & (s=4)  :1.0;
       [v8_4] (door=open) & (s=8)  :1.0;
       [v4_5] (s=4)  :1.0;
       [v5_4] (s=5)  :1.0;

       [v2_5] (s=2)  :1.0;
       [v5_2] (s=5)  :1.0;
       [v5_6] (s=5)  :1.0;
       [v6_5] (s=6)  :1.0;
       //[v5_9] (s=5)  :1.0;
       //[v9_5] (s=9)  :1.0;
       [v4_3] (s=4)  :1.0;
       [v5_9_10] (s=5):1.0;


	
       [failed] (s=failstate) : 1.0;

endrewards


