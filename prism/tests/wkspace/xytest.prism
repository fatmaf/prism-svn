mdp
const int endIndex = 5;
const int startIndex = 0;
const double p = 1.0;


module R0
y0:[0 .. 5] init 0;
x0:[0 .. 5] init 0;
[r0] (x0<endIndex) -> p:(x0'=x0+1);
[u0] (y0<endIndex) -> p:(y0'=y0+1);
[l0] (x0>startIndex) -> p:(x0'=x0-1);
[d0] (y0>startIndex) -> p:(y0'=y0-1);
endmodule
module R1
y1:[0 .. 5] init 0;
x1:[0 .. 5] init 0;
[r1] (x1<endIndex) -> p:(x1'=x1+1);
[u1] (y1<endIndex) -> p:(y1'=y1+1);
[l1] (x1>startIndex) -> p:(x1'=x1-1);
[d1] (y1>startIndex) -> p:(y1'=y1-1);
endmodule




rewards"time"
[r0] (x0<endIndex) : 1.0;
[u0] (y0<endIndex) : 1.0;
[l0] (x0>startIndex) : 1.0;
[d0] (y0>startIndex) : 1.0;
[r1] (x1<endIndex) : 1.0;
[u1] (y1<endIndex) : 1.0;
[l1] (x1>startIndex) : 1.0;
[d1] (y1>startIndex) : 1.0;
endrewards
